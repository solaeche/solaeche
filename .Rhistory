text_color = "white",      # White text color for headers
border = TRUE              # Add borders around headers
),
align = tt_align(align = "center"),  # Center-align content
borders = TRUE,                      # Add borders around content
bg_color = "lightgray"               # Light gray background for rows
)
dt <- tt(distributions, caption = "Distribution of newspapers in the cities of Nicaragua and Honduras") |>
group_tt(i = list("Honduras" = 1, "Nicaragua" = 3))
View(dt)
print(dt)
dt <- tt(distributions, caption = "Distribution of newspapers in the cities of Nicaragua and Honduras") |>
group_tt(i = list("Honduras" = 1, "Nicaragua" = 3)) |>
style_tt(i = c(1,3), background = "gray", color = "white")
print(dt)
dt <- tt(distributions, caption = "Distribution of newspapers in the cities of Nicaragua and Honduras") |>
group_tt(i = list("Honduras" = 1, "Nicaragua" = 3)) |>
style_tt(i = c(1,4), background = "gray", color = "white")
print(dt)
pearson <- read.table("~/Downloads/pearson.txt", quote="\"", comment.char="")
View(pearson)
pearson <- read.table("~/Downloads/pearson.txt", quote="\"", comment.char="")
View(pearson)
#1
mean(pearson$V2)
#b
sd(pearson$V2)
#c
hist(pearson$V2)
#d
boxplot(pearson$V1, pearson$V2)
#e
qqnorm(pearson$V2)
#d
boxplot(pearson$V1, pearson$V2)
#e
qqnorm(pearson$V2)
#c
hist(pearson$V2)
qqline(pearson$V2, col "red")
#e
qqnorm(pearson$V2)
qqline(pearson$V2, col = "red")
load("~/Downloads/mpd2023_web.xlsx")
View(pearson)
library(readxl)
dataset <- read_excel(NULL)
load("~/Downloads/mpd2023_web.xlsx")
library(readxl)
dataset <- read_excel(NULL)
library(readxl)
mpd2023_web <- read_excel("Downloads/mpd2023_web.xlsx")
View(mpd2023_web)
library(readxl)
mpd2023_web <- read_excel("Downloads/mpd2023_web.xlsx",
sheet = "GDPpc")
View(mpd2023_web)
library(ggplot2)
filtered_US <- mpd2023_web[, c(mpd2023_web$`GDP pc 2011 prices` > 1800, mpd2023_web$`United States`)]
filtered_US <- mpd2023_web[mpd2023_web$`GDP pc 2011 prices` >= 1800, ]
View(filtered_US)
View(filtered_US)
ggplot(mpd2023_web, aes(x = `GDP pc 2011 prices`, y = log(`United States`))) +
geom_line() +                # Create a line plot
labs(x = "Year", y = "Log of Value", title = "Log of Values over Time") +
theme_minimal()
ggplot(mpd2023_web, aes(x = `GDP pc 2011 prices`, y = log(United States))) +
ggplot(mpd2023_web, aes(x = `GDP pc 2011 prices`, y = log(`United States`))) +
geom_line() +                # Create a line plot
labs(x = "Year", y = "Log of Value", title = "Log of Values over Time") +
theme_minimal()
ggplot(mpd2023_web, aes(x = `GDP pc 2011 prices`, y = log(as.numeric(`United States`))) +
labs(x = "Year", y = "Log of Value", title = "Log of Values over Time") +
ggplot(mpd2023_web, aes(x = `GDP pc 2011 prices`, y = log(as.numeric(`United States`))) +
ggplot(mpd2023_web, aes(x = `GDP pc 2011 prices`, y = log(as.numeric(`United States`))) +
ggplot(mpd2023_web, aes(x = `GDP pc 2011 prices`, y = log(as.numeric(`United States`))) +
ggplot(mpd2023_web, aes(x = `GDP pc 2011 prices`, y = log(as.numeric(`United States`))) +
filtered_US$`United States` <- as.numeric(filtered_US$`United States`)
ggplot(mpd2023_web, aes(x = `GDP pc 2011 prices`, y = log(`United States`)) +
filtered_US$`United States` <- as.numeric(filtered_US$`United States`)
ggplot(mpd2023_web, aes(x = `GDP pc 2011 prices`, y = log(`United States`)) +
set.seed(123)
n <- 5
p_true <- c(0.1, 0.1, 0.1, 0.1, 0.2, 0.4)
simulations <- replicate(500, mean(sample(1:6, n, replace = TRUE, prob = p_true) == 6))
hist(simulations, main="Histogram of p̂ for n=5", xlab="p̂")
mean(simulations)
sd(simulations)
set.seed(123)
n <- 10
p_true <- c(0.1, 0.1, 0.1, 0.1, 0.2, 0.4)
simulations <- replicate(500, mean(sample(1:6, n, replace = TRUE, prob = p_true) == 6))
hist(simulations, main="Histogram of p̂ for n=5", xlab="p̂")
mean(simulations)
sd(simulations)
set.seed(123)
n <- 10
set.seed(123)
n <- 10
p_true <- c(0.1, 0.1, 0.1, 0.1, 0.2, 0.4)
simulations <- replicate(500, mean(sample(1:6, n, replace = TRUE, prob = p_true) == 6))
hist(simulations, main="Histogram of p for n=10", xlab="p̂")
mean(simulations)
sd(simulations)
library(AER)
data("NaturalGas")
View(NaturalGas)
knitr::opts_chunk$set(echo = TRUE)
library(AER)
library(AER)
library(lmtest)
data("NaturalGas")
library(plm)
install.packages("plm")
library(plm)
lm(consumption ~ eprice + price + heating + income, data = NaturalGas)
plm(consumption ~ eprice + price + heating + income, data = NaturalGas)
ols <- plm(consumption ~ eprice + price + heating + income, data = NaturalGas)
coeftest(ols, vcov = vcovHC(ols, type = "HC1"))
library(sandwich)
library(sandwich)
ols <- lm(consumption ~ eprice + price + heating + income, data = NaturalGas, effect = c(), model = "pooling" )
coeftest(ols, vcov = vcovHC(ols, type = "HC1"))
ols <- lm(consumption ~ eprice + price + heating + income, data = NaturalGas)
coeftest(ols, vcov = vcovHC(ols, type = "HC1"))
ols_time <- lm(consumption ~ eprice + price + heating + income + factor(year), data = NaturalGas)
coeftest(ols_time, vcov = vcovHC(ols_time, type = "HC1"))
table1 <- read.csv("/Users/mariaguadalupesolaecheamadeo/Downloads/669ee-Mpi2020_fin.csv")
df <- read_sav("/Users/mariaguadalupesolaecheamadeo/Downloads/1ff27-REG02_EPHC_3er Trim 2024.SAV")  # Load .sav file
install.packages("haven")  # Install if you haven't already
library(haven)
df <- read_sav("/Users/mariaguadalupesolaecheamadeo/Downloads/1ff27-REG02_EPHC_3er Trim 2024.SAV")  # Load .sav file
View(df)
table1 <- read.csv("/Users/mariaguadalupesolaecheamadeo/Downloads/904fc-426b2-MPI2021_fin.sav")
View(table1)
table2 <- read_sav("/Users/mariaguadalupesolaecheamadeo/Downloads/REG02_ANUAL_2023.csv")
table1 <- read_sav("/Users/mariaguadalupesolaecheamadeo/Downloads/904fc-426b2-MPI2021_fin.sav")
View(table1)
table1$pobrezai <- as.factor(df$pobrezai)  # Poverty status: 1 = Extreme Poor, 2 = Poor, 3 = Not Poor
table1$pobrezai <- as.factor(table1$pobrezai)  # Poverty status: 1 = Extreme Poor, 2 = Poor, 3 = Not Poor
table1$vulnerabilidad <- as.factor(table1$hh_d_sin_salud)
print(table1$vulnerabilidad)
ggplot(table1, aes(x = pobrezai, y = vulnerabilidad)) +
geom_jitter(aes(color = food_insecurity), width = 0.2, alpha = 0.6) +
labs(
title = "Relationship Between Poverty Status and Health Vulnerability",
x = "Poverty Status (1 = Extreme Poor, 2 = Poor, 3 = Not Poor)",
y = "Food Insecurity (1 = Yes, 0 = No)"
) +
theme_minimal() +
scale_color_manual(values = c("0" = "blue", "1" = "red"), name = "Vulnerabilidad")
ggplot2(table1, aes(x = pobrezai, y = vulnerabilidad)) +
geom_jitter(aes(color = food_insecurity), width = 0.2, alpha = 0.6) +
labs(
title = "Relationship Between Poverty Status and Health Vulnerability",
x = "Poverty Status (1 = Extreme Poor, 2 = Poor, 3 = Not Poor)",
y = "Food Insecurity (1 = Yes, 0 = No)"
) +
theme_minimal() +
scale_color_manual(values = c("0" = "blue", "1" = "red"), name = "Vulnerabilidad")
library(ggplot2)
ggplot(table1, aes(x = pobrezai, y = vulnerabilidad)) +
geom_jitter(aes(color = food_insecurity), width = 0.2, alpha = 0.6) +
labs(
title = "Relationship Between Poverty Status and Health Vulnerability",
x = "Poverty Status (1 = Extreme Poor, 2 = Poor, 3 = Not Poor)",
y = "Food Insecurity (1 = Yes, 0 = No)"
) +
theme_minimal() +
scale_color_manual(values = c("0" = "blue", "1" = "red"), name = "Vulnerabilidad")
ggplot(table1, aes(x = pobrezai, y = vulnerabilidad)) +
geom_jitter(aes(color = vulnerabilidad), width = 0.2, alpha = 0.6) +
labs(
title = "Relationship Between Poverty Status and Health Vulnerability",
x = "Poverty Status (1 = Extreme Poor, 2 = Poor, 3 = Not Poor)",
y = "Food Insecurity (1 = Yes, 0 = No)"
) +
theme_minimal() +
scale_color_manual(values = c("0" = "blue", "1" = "red"), name = "Vulnerabilidad")
# Load the dataset (update path if necessary)
df <- read_sav("/Users/mariaguadalupesolaecheamadeo/Downloads/MPI2021_fin.sav")
# Convert key variables to appropriate formats
df$year <- as.factor(df$year)  # Ensure 'year' is categorical
View(df)
df$dpto <- as.factor(df$dpto)  # Convert department code to factor for mapping
df$MPI <- as.numeric(df$M0_26) # Ensure MPI score is numeric
# Load necessary libraries
library(ggplot2)
library(haven)  # For reading SPSS files
library(dplyr)
# Load the dataset (update file path if needed)
df <- read_sav("/Users/mariaguadalupesolaecheamadeo/Downloads/MPI2021_fin.sav")
# Convert relevant variables to categorical factors
df$employment_deprivation <- as.factor(df$hh_d_destotalmax)  # Employment deprivation
df$healthcare_access <- as.factor(df$hh_d_sin_salud)  # Lack of healthcare access
df$school_nonattendance <- as.factor(df$hh_d_ni_noasis)  # School non-attendance
df$water_access <- as.factor(df$hh_d_agua_mejor)  # Lack of improved water access
# ---- 1. Bar Chart: School Non-Attendance by Employment Deprivation ---- #
ggplot(df, aes(x = employment_deprivation, fill = school_nonattendance)) +
geom_bar(position = "fill") +  # Normalize counts to proportions
labs(
title = "School Non-Attendance by Employment Deprivation",
x = "Employment Deprivation (1 = Yes, 0 = No)",
y = "Proportion of Households",
fill = "School Non-Attendance"
) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
theme_minimal()
# ---- 2. Facet Grid: Comparing Multiple Deprivations ---- #
ggplot(df, aes(x = employment_deprivation, fill = healthcare_access)) +
geom_bar(position = "fill") +
labs(
title = "Healthcare Access, Water Access, and School Non-Attendance by Employment Deprivation",
x = "Employment Deprivation",
y = "Proportion of Households",
fill = "Lack of Healthcare Access"
) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
facet_grid(. ~ water_access + school_nonattendance) +  # Creates separate plots for different deprivation levels
theme_minimal()
# ---- 2. Facet Grid: Comparing Multiple Deprivations ---- #
# Improved Facet Grid: Separate Panels for Water Access & School Non-Attendance
ggplot(df, aes(x = employment_deprivation, fill = healthcare_access)) +
geom_bar(position = "fill") +
labs(
title = "Healthcare Access, Water Access, and School Non-Attendance by Employment Deprivation",
x = "Employment Deprivation",
y = "Proportion of Households",
fill = "Lack of Healthcare Access"
) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
facet_wrap(~ water_access + school_nonattendance, ncol = 2) +  # Wrap into multiple panels
theme_minimal()
ggplot(df, aes(x = employment_deprivation, fill = healthcare_access)) +
geom_bar(position = "fill") +
labs(
title = "Healthcare Access, Water Access, and School Non-Attendance by Employment Deprivation",
x = "Employment Deprivation",
y = "Proportion of Households",
fill = "Lack of Healthcare Access"
) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
facet_grid(school_nonattendance ~ water_access, labeller = labeller(
school_nonattendance = c("0" = "School Attendance", "1" = "Non-Attendance"),
water_access = c("0" = "Improved Water", "1" = "No Improved Water")
)) +
theme_minimal()
library(ggplot2)
library(readr)
library(ggdag)
library(tidyverse)
library(gt)
library(modelsummary)
# read-in data
dat = read_csv(here::here("workshops/aau_survey/clean_endline_did.csv" )) %>%
#dat = read_csv("https://raw.githubusercontent.com/jrspringman/psci3200-globaldev/main/workshops/aau_survey/clean_endline_did.csv" ) %>%
# clean home region variable
mutate(q8_baseline = ifelse(q8_baseline == "Southern Nations, Nationalities, and Peoples Region", "SNNPR", q8_baseline),
q8_baseline = str_remove(q8_baseline, " Region"))
# read-in data
dat = read_csv(here::here("workshops/aau_survey/clean_endline_did.csv" )) %>%
dat = read_csv("https://raw.githubusercontent.com/jrspringman/psci3200-globaldev/main/workshops/aau_survey/clean_endline_did.csv" ) %>%
# clean home region variable
mutate(q8_baseline = ifelse(q8_baseline == "Southern Nations, Nationalities, and Peoples Region", "SNNPR", q8_baseline),
q8_baseline = str_remove(q8_baseline, " Region"))
# create color palette for plotting
palette = MetBrewer::met.brewer(name = "Cross")
# read-in data
dat = read_csv(here::here("workshops/aau_survey/clean_endline_did.csv" )) %>%
dat = read_csv("https://raw.githubusercontent.com/jrspringman/psci3200-globaldev/main/workshops/aau_survey/clean_endline_did.csv" ) %>%
# clean home region variable
mutate(q8_baseline = ifelse(q8_baseline == "Southern Nations, Nationalities, and Peoples Region", "SNNPR", q8_baseline),
q8_baseline = str_remove(q8_baseline, " Region"))
dat <- read_csv(here::here("workshops/aau_survey/clean_endline_did.csv")) %>%
# clean home region variable
mutate(q8_baseline = ifelse(q8_baseline == "Southern Nations, Nationalities, and Peoples Region", "SNNPR", q8_baseline),
q8_baseline = str_remove(q8_baseline, " Region"))
# read-in data
#dat = read_csv(here::here("workshops/aau_survey/clean_endline_did.csv" )) %>%
dat = read_csv("https://raw.githubusercontent.com/jrspringman/psci3200-globaldev/main/workshops/aau_survey/clean_endline_did.csv" ) %>%
# clean home region variable
mutate(q8_baseline = ifelse(q8_baseline == "Southern Nations, Nationalities, and Peoples Region", "SNNPR", q8_baseline),
q8_baseline = str_remove(q8_baseline, " Region"))
# create color palette for plotting
palette = MetBrewer::met.brewer(name = "Cross")
View(dat)
dat <- dat %>%
rename(
# Gender identity (baseline)
gender_baseline = any_of("q3_baseline"),
# Career plans (endline)
plan_civil_society = any_of("q26_civ"),
plan_politics = any_of("q26_politics"),
plan_public_sector = any_of("q26_public"),
plan_run_for_office = any_of("q27_1"),
plan_start_ngo = any_of("q27_3"),
# Career plans (baseline)
plan_civil_society_baseline = any_of("q26_civ_baseline"),
plan_politics_baseline = any_of("q26_politics_baseline"),
plan_public_sector_baseline = any_of("q26_public_baseline"),
plan_run_for_office_baseline = any_of("q27_1_baseline"),
plan_start_ngo_baseline = any_of("q27_3_baseline"),
# Political efficacy (endline)
efficacy_positive_change = any_of("q17_3"),
efficacy_youth_opportunities = any_of("q17_1"),
efficacy_youth_change = any_of("q17_2"),
# Political efficacy (baseline)
efficacy_positive_change_baseline = any_of("q17_3_baseline"),
efficacy_youth_opportunities_baseline = any_of("q17_1_baseline"),
efficacy_youth_change_baseline = any_of("q17_2_baseline")
)
View(dat)
View(dat)
glimpse(dat)
dat %>%
select(plan_civil_society, plan_politics, plan_public_sector,
plan_run_for_office, plan_start_ngo,
efficacy_positive_change, efficacy_youth_opportunities, efficacy_youth_change,
everything() %>% select(contains("baseline"))) %>%
glimpse()
dat %>%
dat %>%
select(
plan_civil_society, plan_politics, plan_public_sector,
plan_run_for_office, plan_start_ngo,
plan_civil_society_baseline, plan_politics_baseline, plan_public_sector_baseline,
plan_run_for_office_baseline, plan_start_ngo_baseline,
efficacy_positive_change, efficacy_youth_opportunities, efficacy_youth_change,
efficacy_positive_change_baseline, efficacy_youth_opportunities_baseline, efficacy_youth_change_baseline
) %>%
glimpse()
dat %>%
select(
plan_civil_society, plan_politics, plan_public_sector,
plan_run_for_office, plan_start_ngo,
plan_civil_society_baseline, plan_politics_baseline, plan_public_sector_baseline,
plan_run_for_office_baseline, plan_start_ngo_baseline,
efficacy_positive_change, efficacy_youth_opportunities, efficacy_youth_change,
efficacy_positive_change_baseline, efficacy_youth_opportunities_baseline, efficacy_youth_change_baseline
) %>%
glimpse()
dat <- dat %>%
mutate(across(starts_with("plan_"), as.numeric))
#checking if it worked out
dat %>%
select(
plan_civil_society, plan_politics, plan_public_sector,
plan_run_for_office, plan_start_ngo,
plan_civil_society_baseline, plan_politics_baseline, plan_public_sector_baseline,
plan_run_for_office_baseline, plan_start_ngo_baseline) %>%
glimpse()
#creating in the first part the endline index by summing all the endline values and in the second one the baseline index.
dat <- dat %>%
mutate(
plans_index_endline = rowSums(across(c(
plan_civil_society,
plan_politics,
plan_public_sector,
plan_run_for_office,
plan_start_ngo
)), na.rm = TRUE),
plans_index_baseline = rowSums(across(c(
plan_civil_society_baseline,
plan_politics_baseline,
plan_public_sector_baseline,
plan_run_for_office_baseline,
plan_start_ngo_baseline
)), na.rm = TRUE)
)
print(dat$plans_index_baseline)
dat <- dat %>%
#endline index
mutate(
#calculate z-scores for each of the three endline political efficacy variables, then take the row-wise average across them
efficacy_z_endline = rowMeans(
scale(across(c(
efficacy_positive_change,
efficacy_youth_opportunities,
efficacy_youth_change
))),
na.rm = TRUE
),
#baseline index
efficacy_z_baseline = rowMeans(
scale(across(c(
efficacy_positive_change_baseline,
efficacy_youth_opportunities_baseline,
efficacy_youth_change_baseline
))),
na.rm = TRUE
)
)
dat <- dat %>%
mutate(
#z-score index for future plans at endline, standardize each variable and average them across each row
plans_z_endline = rowMeans(
scale(across(c(
plan_civil_society,
plan_politics,
plan_public_sector,
plan_run_for_office,
plan_start_ngo
))),
na.rm = TRUE
),
#z-score index for future plans at baseline
plans_z_baseline = rowMeans(
scale(across(c(
plan_civil_society_baseline,
plan_politics_baseline,
plan_public_sector_baseline,
plan_run_for_office_baseline,
plan_start_ngo_baseline
))),
na.rm = TRUE
),
#z-score index for political efficacy at endline
efficacy_z_endline = rowMeans(
scale(across(c(
efficacy_positive_change,
efficacy_youth_opportunities,
efficacy_youth_change
))),
na.rm = TRUE
),
#z-score index for political efficacy at baseline
efficacy_z_baseline = rowMeans(
scale(across(c(
efficacy_positive_change_baseline,
efficacy_youth_opportunities_baseline,
efficacy_youth_change_baseline
))),
na.rm = TRUE
)
)
#Plot 1: future plans at baseline
ggplot(dat, aes(x = plans_z_baseline)) +
geom_density(fill = "skyblue", alpha = 0.5) +
labs(
title = "Distribution of future plans z-score (baseline)",
x = "z-score (future plans - baseline)",
y = "density"
)
#Plot 2: future plans at endline
ggplot(dat, aes(x = plans_z_endline)) +
geom_density(fill = "forestgreen", alpha = 0.5) +
labs(
title = "distribution of future plans z-score (endline)",
x = "z-score (future plans - endline)",
y = "density"
)
#Plot 3: political efficacy at baseline
ggplot(dat, aes(x = efficacy_z_baseline)) +
geom_density(fill = "orange", alpha = 0.5) +
labs(
title = "Distribution of political efficacy z-score (baseline)",
x = "z-score (efficacy - baseline)",
y = "density"
)
#Plot 4: political efficacy at endline
ggplot(dat, aes(x = efficacy_z_endline)) +
geom_density(fill = "purple", alpha = 0.5) +
labs(
title = "Distribution of political efficacy z-score (endline)",
x = "z-score (efficacy - endline)",
y = "Density"
)
#creaating subset with the required categories
subset_dat <- dat %>%
select(
response_id,
gender_baseline,
plans_z_baseline,
plans_z_endline,
efficacy_z_baseline,
efficacy_z_endline
)
#estimating model
library(modelsummary)
model <- lm(plans_z_baseline ~ efficacy_z_baseline, data = dat)
modelsummary(model)
#calculating mean
efficacy_mean <- mean(dat$efficacy_z_baseline, na.rm = TRUE)
#creating binary variable
dat <- dat %>%
mutate(
efficacy_binary = ifelse(efficacy_z_baseline >= efficacy_mean, 1, 0)
)
#let us also assign 1 if the respondant is female and 0 if they're a male
dat <- dat %>%
mutate(
gender_binary = ifelse(gender_baseline == "Female", 1, 0)
)
#the model
model_interaction <- lm(plans_z_baseline ~ efficacy_binary * gender_binary, data = dat)
modelsummary(model_interaction)
long_dat <- dat %>%
select(response_id, plans_z_baseline, plans_z_endline,
efficacy_z_baseline, efficacy_z_endline) %>%
pivot_longer(
cols = ends_with("baseline") | ends_with("endline"),
names_to = c(".value", "time"),
names_pattern = "(.*)_z_(baseline|endline)"
)
#include respondant fixed effects
model_fe <- lm(plans ~ efficacy + factor(response_id), data = long_dat)
modelsummary(model_fe)
modelsummary(model_interaction)
modelsummary(model_fe)
#include respondant fixed effects
model_fe <- lm(plans ~ efficacy + factor(response_id), data = long_dat)
View(long_dat)
